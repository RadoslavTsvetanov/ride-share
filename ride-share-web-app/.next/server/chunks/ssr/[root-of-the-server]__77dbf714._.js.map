{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///home/rado/Desktop/Projects/ride-share/ride-share-web-app/src/pages/map/ride-opprotunities.tsx"],"sourcesContent":["// App.jsx\nimport React, { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-routing-machine\";\nimport \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n\nexport default function RideOpportunities() {\n  const [position, setPosition] = useState(null);\n  const [city, setCity] = useState(\"\");\n\n  useEffect(() => {\n    // Get user location\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async (pos) => {\n        const { latitude, longitude } = pos.coords;\n        setPosition([latitude, longitude]);\n\n        // Reverse geocode to get city\n        const res = await fetch(\n          `https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${latitude}&lon=${longitude}`\n        );\n        const data = await res.json();\n        setCity(data.address.city || data.address.town || data.address.village || \"Unknown\");\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!position) return;\n\n    // Add routing (example route near user)\n    const map = L.map(\"map\").setView(position, 13);\n\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OSM</a>',\n    }).addTo(map);\n\n    L.marker(position).addTo(map).bindPopup(`You are here: ${city}`).openPopup();\n\n    // Example routing (simulate route nearby)\n    L.Routing.control({\n      waypoints: [\n        L.latLng(position[0], position[1]),\n        L.latLng(position[0] + 0.01, position[1] + 0.01), // small nearby point\n        L.latLng(position[0] + 0.02, position[1] - 0.01),\n      ],\n      routeWhileDragging: false,\n      draggableWaypoints: false,\n      addWaypoints: false,\n    }).addTo(map);\n  }, [position, city]);\n\n  return (\n    <div style={{ height: \"100vh\", width: \"100%\" }}>\n      <div id=\"map\" style={{ height: \"100%\", width: \"100%\" }}></div>\n    </div>\n  );\n}"],"names":[],"mappings":"AAAA,UAAU;;;;;;AACV;AAEA;;;;;;;;;;;;;;;;;AAKe,SAAS;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,+GAAQ,EAAC;IACzC,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,+GAAQ,EAAC;IAEjC,IAAA,gHAAS,EAAC;QACR,oBAAoB;QACpB,IAAI,UAAU,WAAW,EAAE;YACzB,UAAU,WAAW,CAAC,kBAAkB,CAAC,OAAO;gBAC9C,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,IAAI,MAAM;gBAC1C,YAAY;oBAAC;oBAAU;iBAAU;gBAEjC,8BAA8B;gBAC9B,MAAM,MAAM,MAAM,MAChB,CAAC,8DAA8D,EAAE,SAAS,KAAK,EAAE,WAAW;gBAE9F,MAAM,OAAO,MAAM,IAAI,IAAI;gBAC3B,QAAQ,KAAK,OAAO,CAAC,IAAI,IAAI,KAAK,OAAO,CAAC,IAAI,IAAI,KAAK,OAAO,CAAC,OAAO,IAAI;YAC5E;QACF;IACF,GAAG,EAAE;IAEL,IAAA,gHAAS,EAAC;QACR,IAAI,CAAC,UAAU;QAEf,wCAAwC;QACxC,MAAM,MAAM,kHAAC,CAAC,GAAG,CAAC,OAAO,OAAO,CAAC,UAAU;QAE3C,kHAAC,CAAC,SAAS,CAAC,sDAAsD;YAChE,aAAa;QACf,GAAG,KAAK,CAAC;QAET,kHAAC,CAAC,MAAM,CAAC,UAAU,KAAK,CAAC,KAAK,SAAS,CAAC,CAAC,cAAc,EAAE,MAAM,EAAE,SAAS;QAE1E,0CAA0C;QAC1C,kHAAC,CAAC,OAAO,CAAC,OAAO,CAAC;YAChB,WAAW;gBACT,kHAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE;gBACjC,kHAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,GAAG,MAAM,QAAQ,CAAC,EAAE,GAAG;gBAC3C,kHAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,GAAG,MAAM,QAAQ,CAAC,EAAE,GAAG;aAC5C;YACD,oBAAoB;YACpB,oBAAoB;YACpB,cAAc;QAChB,GAAG,KAAK,CAAC;IACX,GAAG;QAAC;QAAU;KAAK;IAEnB,qBACE,qKAAC;QAAI,OAAO;YAAE,QAAQ;YAAS,OAAO;QAAO;kBAC3C,cAAA,qKAAC;YAAI,IAAG;YAAM,OAAO;gBAAE,QAAQ;gBAAQ,OAAO;YAAO;;;;;;;;;;;AAG3D","debugId":null}}]
}